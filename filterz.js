const createWebGLProgram=(e,r,t)=>{var a=e.createShader(e.VERTEX_SHADER),o=e.createShader(e.FRAGMENT_SHADER);e.shaderSource(a,r);e.shaderSource(o,t);e.compileShader(a);e.compileShader(o);r=e.createProgram();e.attachShader(r,a);e.attachShader(r,o);e.linkProgram(r);e.useProgram(r);return r},buffer=(e,r,t,a,o=0,i,n=e.FLOAT,l=e.FALSE,c)=>{if(t instanceof Array)t=new Float32Array(t.flat(2));else if(!(t instanceof Float32Array)||"string"!=typeof a)return;var g=e.createBuffer();e.bindBuffer(e.ARRAY_BUFFER,g);e.bufferData(e.ARRAY_BUFFER,t,e.STATIC_DRAW);g=e.getAttribLocation(r,a);e.vertexAttribPointer(g,o,n,l,0,0);e.enableVertexAttribArray(g)},texture=(e,r,t,a)=>{var o=e.createTexture();e.bindTexture(e.TEXTURE_2D,o);e.texImage2D(e.TEXTURE_2D,0,e.RGBA,t,a,0,e.RGBA,e.UNSIGNED_BYTE,r);e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE);e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE);e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MIN_FILTER,e.LINEAR);e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MAG_FILTER,e.LINEAR)},getWeight=e=>{e=e.reduce((e,r)=>e+r);return e<=0?1:e},determineShader=(e,r)=>{var t=(e,r,t)=>Math.min(Math.max(e,r),t);switch(e){case"opaque":return"vec4 tex = texture2D(Sampler, texture);gl_FragColor = vec4(tex.rgb, 1.0);";case"invert":return"vec4 tex = texture2D(Sampler, texture);gl_FragColor = vec4(1.0 - tex.r, 1.0 - tex.g, 1.0 - tex.b, 1.0);";case"threshold":return`highp float threshold = ${0|t(r,0,1)}.0;vec4 tex = texture2D(Sampler, texture);float color = (0.2126 * tex.r + 0.7152 * tex.g + 0.0722 * tex.b) >= threshold ? 255.0 : 0.0;gl_FragColor = vec4(color, color, color, 1.0);`;case"brightness":return`highp float brightness = ${0|t(r,0,255)}.0 / 255.0;vec4 tex = texture2D(Sampler, texture);gl_FragColor = vec4(tex.r + brightness, tex.g + brightness, tex.b + brightness, 1.0);`;case"grayscale":return"vec4 tex = texture2D(Sampler, texture);float color = 0.299 * tex.r + 0.587 * tex.g + 0.114 * tex.b;gl_FragColor = vec4(color, color, color, 1.0);";case"posterize":return`highp float num = ${0|t(r,2,255)}.0;vec4 color = texture2D(Sampler, texture);gl_FragColor = vec4(floor(color.r * num) / 256.0 * 255.0 / (num - 1.0), floor(color.g * num) / 256.0 * 255.0 / (num - 1.0), floor(color.b * num) / 256.0 * 255.0 / (num - 1.0), 1.0);`;default:var a={sharpen:[0,-1,0,-1,5,-1,0,-1,0],sharpen2:[-1,-1,-1,-1,9,-1,-1,-1,-1],prewitt_x:[-1,0,1,-1,0,1,-1,0,1],prewitt_y:[-1,-1,-1,0,0,0,1,1,1],sobel_top:[1,2,1,0,0,0,-1,-2,-1],sobel_bottom:[-1,-2,-1,0,0,0,1,2,1],sobel_left:[1,0,-1,2,0,-2,1,0,-1],sobel_right:[-1,0,1,-2,0,2,-1,0,1],emboss:[-2,-1,0,-1,1,1,0,1,2],outline:[-1,-1,-1,-1,8,-1,-1,-1,-1],darken:[0,0,0,0,.5,0,0,0,0],lighten:[0,0,0,0,2,0,0,0,0],edge:[0,1,0,1,-4,1,0,1,0]},o=(t,a)=>{const o=e=>e<0?-e:e;var i,n,l;let c=[],g=t>>1,s="vec2 pixel = vec2(1.0, 1.0) / size;\nvec4 color = ";for(let r=0;r<t;r++)for(let e=0;e<t;e++){var h=r*t+e;a&&(c[h]=(i=e,n=r,l=g,o(l-i)+o(g-n))>g?0:1);s+=`texture2D(Sampler, texture + pixel * vec2(${e-g}.0,  ${r-g}.0)) * kernel[${h}]${h<t*t-1?" + ":";"}`}return a?{kernel:c,shader:s+"gl_FragColor = vec4((color / weight).rgb, 1.0);",n:t}:s+"gl_FragColor = vec4((color / weight).rgb, 1.0);"};return a[e]||"blur"===e?"blur"===e?o(t(r+2,3,9),!0):{shader:o(3),kernel:a[e],n:3}:void 0}},applyShader=(e,r,t=0,a=0)=>{a=`precision highp float;varying vec2 texture;uniform sampler2D Sampler;uniform vec2 size;${t?`uniform float kernel[${a*a}];uniform float weight;`:""}void main () {${r}}`;const o=new OffscreenCanvas(e.width,e.height),i=o.getContext("webgl2");r=[0,e.height,e.width,e.height,0,0,0,0,e.width,e.height,e.width,0],a=createWebGLProgram(i,"precision highp float;attribute vec2 position;uniform vec2 resolution;attribute vec2 vTexture;varying vec2 texture;void main () {texture = vTexture;vec2 one = position / resolution;vec2 two = one * 2.0;vec2 clip = two - 1.0;gl_Position = vec4(clip, 0.0, 1.0);}",a);buffer(i,a,r,"position",2);buffer(i,a,[0,0,1,0,0,1,0,1,1,0,1,1],"vTexture",2);i.viewport(0,0,e.width,e.height);i.uniform2f(i.getUniformLocation(a,"resolution"),e.width,e.height);i.uniform2f(i.getUniformLocation(a,"size"),e.width,e.height);if(t){i.uniform1fv(i.getUniformLocation(a,"kernel[0]"),t);i.uniform1f(i.getUniformLocation(a,"weight"),getWeight(t))}i.useProgram(a);let n=e instanceof HTMLCanvasElement?e:new OffscreenCanvas(e.width,e.height);if(n instanceof OffscreenCanvas){const l=n.getContext("2d");l.drawImage(e,0,0)}i.clearColor(0,0,0,1);i.clear(i.COLOR_BUFFER_BIT);texture(i,n,e.width,e.height);i.drawArrays(i.TRIANGLES,0,6);return o},filter=(...e)=>{let r,t,a,o;if(e[0]instanceof HTMLCanvasElement||e[0]instanceof HTMLImageElement||e[0]instanceof OffscreenCanvas){r=e[0];t=e[1];e[2]&&(a=e[2]);e[3]&&(o=e[3])}else{r=canvas;t=e[0];e[1]&&(a=e[1]);e[2]&&(o=e[2])}e=determineShader(t,a);if(["opaque","invert","threshold","brightness","grayscale","posterize"].includes(t)){var i=e,i=applyShader(r,i);if(o)return i;image(i,data.image?300:0,data.image?300:0)}else{i=e.shader,i=applyShader(r,i,e.kernel,e.n);if(o)return i;image(i,data.image?canvas.width/2:0,data.image?canvas.height/2:0)}};
